README-Lifecycle choice


EXTRACTING SCHOOLING DATA FROM TEXT FILES
1. original work done in SAS before data is desensitized (not included here)
2. datamanip_main.r: determines college enrollment, application, and admission statuses, does sanity checks, and creates inputs for python. This file is out of date. 
3. datamanip_main-underscore.r: new version of the file that uses new input data where all disallowed symbols (such as - and ~) are replaced with _. This file is out of date. 
4. datamanip_main-alternate.r: Uses alternative approach with fewer sanity checks to get data on more students. This file is out of date. 
5. datamanip_main.py: Original python file for extracting schooling information from text files, uses COMPILED_DATA_APPLYER as input. This file is out of date. 
6. datamanip_main_underscore.py: new version of the file that uses new input data where all disallowed symbols (such as - and ~) are replaced with _. This file is out of date.
7. datamanip_main_appsonly.py: Code for extracting schooling information from text files, Input data is those who applied to at least one school. Output of this file gives inputs to income prediction. This file is up to date. 

PROJECTING INDIVIDUAL INCOMES
1. incomeclean.R: original file to full income data and create usable time series. This file is out of date. 
2. incomeclean-incomeonly.r: uses labor income only, ignoring farm, business, social security, etc. This file is out of date. 
3. individualprofilecreation.r: attempts projection of individual incomes using various approaches (single parameter, two parameter, three parameter, quadratic, etc.) and projects individual incomes. This file is out of date.
4. coeffregression.R: Performs regressions to determine whether b0 is predicted by education. This file is out of date.

5. incomeclean-conservative.r: Code to perform individual income predictions and check their predictive power; includes only labor income, with or without 10K limit and filled in data, with or without employment restriction. This file is up to date.
6. fun_checkPredictionAbility.R: function run from incomeclean-conservative; does regressions and plots to test how well education predicts b0. This file is up to date.
7. fun_fillMissingMiddle.R: function run from incomeclean-conservative; fills missing data in the middle of the time series and enforces 10K minimum income limit. This file is up to date.
8. fun_projectIncomes.R: function run from incomeclean-conservative; projects incomes using a specific set of input data. This file is up to date.
9. fun_removeNotFT.R: function run from incomeclean-conservative; enforces 1200 hour per year minimum employment. This file is up to date.
10. fun_checkPredictionAbilityStErr.R: a modified version of checkPrdictionAbility. This file is out of date and unused since this strategy for testing relevance of standard errors is not correct. 
11. fun_getStError.R: This function calculates standard errors for incomes in each category. Incomes are normalized by average income for each age year. All data points, including projected incomes, are used. This file is up to date.
12. fun_getStErrorReals.R: This function calculates standard errors for incomes in each category. Incomes are normalized by average income for each age year. Only "real" data points are used, excluding projected incomes. This file is up to date.
13. fun_getRevelevantData.R: Creates a dataset that includes only those individuals for who we have acceptable parameter estiamtes. Includes their parameter, category, admit, attend, and income. This file is up to date. 
14. fun_lookupCategory.R: Lookup for categorical income variables. Translates category number to mean value for that category using the appropriate scale. Called from fun_getTotal.R. This file is up to date. 
15. fun_TenKMin.R: Remove any income value below $10,000. This file is up to date. 
16. fun_incomeDiffPlot.R: attempts creation of a plot revealing income differences
17. fun_checkPredictionAbility2Cat.R checks prediction ability when comparing only the difference between attending the best school you got into and all other
18. fun_checkPredictionAbilityAttendCats.R checks prediction ability based on whether school was attended or some other school (multiple categories)
19. fun_checkPredictionAbilityAttendOnly.R checks prediction ability based only whether attending school at all matters
20. fun_checkPredictionAbilityAttend2Cats.R checks prediction ability based on whether school was attended or not (same as checkPredictionAbilityAttendCats but all non-best schools are aggregated leading to 2 categories)
21. fun_compareAdmitAttend compares admission and attendance as drivers of b0. Inlcudes creating a truly interval-based scale and investigating correlations. 
22. fun_fillIncomePredictors.R adds major, geography, grades, and college completion to datase.
23. fun_from21.R grabs data starting only at age 22. 
24. fun_checkPredictionAbilityInterval.R checks whether we get better results in terms of prediciton ability when using the interval adjusted scales or admission/attendance and when we use errors from the admit~attend or attend~admit regression


1979 DATA
1. incomeclean-79.r: Extraction of 1979 income, projection of income using NS, and estimation of correlation with stock returns using two methods. This file is up to date.

df <- data.frame(substrate = gl(6, 2, 12, labels=letters[1:6]),
                 depth = gl(2, 1, 12, labels=c("surf", "deep")),
                 mean = 10 * runif(12),
                 err = runif(12))
df <- ddply(df,.(depth),transform,ystart = cumsum(mean),yend = cumsum(mean) + err)
p <- ggplot(df, aes(x=depth, y=mean, fill=substrate)) + 
        geom_bar(stat="identity")
p + geom_segment(aes(xend = depth,y = ystart,yend = yend)) + 
        geom_point(aes(x = depth,y = yend),shape = "|",show_guide = FALSE) +
        coord_flip()